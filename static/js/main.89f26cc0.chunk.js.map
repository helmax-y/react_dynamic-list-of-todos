{"version":3,"sources":["api.js","Components/User.js","Components/TodoItem.js","Components/TodoList.js","App.js","index.js"],"names":["getData","url","fetch","then","response","json","User","_ref","userData","react_default","a","createElement","name","TodoItem","todo","id","title","Components_User","user","className","completed","TodoList","todos","_useState","useState","_useState2","Object","slicedToArray","sortedTodos","setTodos","map","column","key","onClick","event","by","toConsumableArray","sort","b","localeCompare","target","innerText","Components_TodoItem","App","preparedTodos","setPreparedTodos","_useState3","_useState4","isLoading","setLoading","length","type","_ref2","users","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","objectSpread2","find","userId","t0","console","error","stop","Components_TodoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.89f26cc0.chunk.js","sourcesContent":["const todosURL = 'https://jsonplaceholder.typicode.com/todos';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nconst getData = url => fetch(url)\n  .then(response => response.json());\n\nexport const getTodos = () => getData(todosURL);\nexport const getUsers = () => getData(usersURL);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userData }) => (\n  <td>{userData.name}</td>\n);\n\nUser.propTypes = { userData: PropTypes.shape({\n  name: PropTypes.string,\n}).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tbody>\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <User userData={todo.user} />\n      <td\n        className={todo.completed ? 'completed' : 'not-completed'}\n      >\n        {todo.completed ? 'yes' : 'no'}\n      </td>\n    </tr>\n  </tbody>\n);\n\nTodoItem.propTypes = { todo: PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.object,\n}).isRequired };\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => {\n  const [sortedTodos, setTodos] = useState(todos);\n\n  const sort = (by) => {\n    switch (by) {\n      case 'user':\n        setTodos([...todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n        break;\n\n      case 'title':\n        setTodos([...todos].sort((a, b) => a.title.localeCompare(b.title)));\n        break;\n\n      default:\n        setTodos([...todos].sort((a, b) => a[by] - b[by]));\n    }\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {['id', 'title', 'user', 'completed'].map(column => (\n            <th\n              key={column}\n              onClick={event => sort(event.target.innerText)}\n            >\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      {sortedTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </table>\n  );\n};\n\nTodoList.propTypes = { todos: PropTypes.arrayOf(PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n})).isRequired };\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getTodos, getUsers } from './api';\nimport TodoList from './Components/TodoList';\n\nconst App = () => {\n  const [preparedTodos, setPreparedTodos] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadTodosAndUsers = async() => {\n    setLoading(true);\n\n    try {\n      const [todos, users] = await Promise.all([getTodos(), getUsers()]);\n\n      setPreparedTodos(todos.map(todo => ({\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      })));\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {isLoading && <h2>Loading...</h2>}\n      {!isLoading && (preparedTodos.length === 0 ? (\n        <button\n          type=\"button\"\n          onClick={loadTodosAndUsers}\n        >\n          Load\n        </button>\n      ) : (\n        <TodoList\n          todos={preparedTodos}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}